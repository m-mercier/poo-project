/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Simulador;

import javax.swing.JOptionPane;

/**
 * @author Ana Guarino
 * @author Marta Mercier
 */
public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Interface
     */
    final private Ambiente A;
    private int selectedindex; //indice da escolha na jComboBox(0-Aleatório 1-Mais_perto 2-Máxima_diferença)
    
    /**
     * Criação do ambiente, inicialização dos componentes da JFrame e execução da simulação
     */
    public Interface() {
        A = new Ambiente(); //Criação do ambiente
        initComponents();   //inicializa os componentes da interface gráfica
        A.run();    //executa o programa
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Guuugle - Empresa de Robots Móveis");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Tipo de Robots:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aleatório", "Mais perto","Máxima Diferença" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Imprimir Sequência de Passos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Imprimir Memória");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Imprimir Percepções");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.setText("Imprimir Dados Estatísticos");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton1)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método que mostra a janela de erro
     * @param str frase que aparece na mensagem de erro
     */
    public static void janela_popup(String str){
        JOptionPane.showMessageDialog(null,str, "Erro", JOptionPane.ERROR_MESSAGE);
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTextArea1.setText("");
        if(!A.getListaAgentes().isEmpty()){
            for(Agente a:A.getListaAgentes()) //Percorre a lista de agentes
            {
                if(a.tipo==(selectedindex+1)) //Verifica se o agente é do tipo selecionado na jComboBox
                {   
                    jTextArea1.append("O Robot com o id:"+a.id+" percorreu o seguinte caminho:\n");
                    for(Coordenadas b:a.caminho)    //Imprime as coordenadas
                    {
                        jTextArea1.append("("+b.getPos_x()+","+b.getPos_y()+")\n");
                    } 
                    jTextArea1.append("\n");
                }
            }
        }
        else{
            jTextArea1.append("A lista de Agentes está vazia!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextArea1.setText("");
        if(!A.getListaAgentes().isEmpty()){
            for(Agente a:A.getListaAgentes()) //Percorre a lista de agentes
            {
                if(a.tipo==(selectedindex+1))   //Verifica se o agente é do tipo selecionado na jComboBox
                {   
                    jTextArea1.append("O Robot com o id:"+a.id+" tem a seguinte percepções:\n\n");
                    if(!a.percecoes.isEmpty()){
                        for(Objecto b:a.percecoes) //Imprime as preceções
                        {
                            jTextArea1.append("Objecto "+b.id+"\n");
                            jTextArea1.append("Cor: "+b.cor+"\n");
                            jTextArea1.append("Forma: "+b.forma_geometrica+"\n");
                            jTextArea1.append("Posição: ("+b.posicao.getPos_x()+","+b.posicao.getPos_y()+")\n");
                            jTextArea1.append("Tipo: "+b.getTipo()+"\n\n");
                        } 
                        jTextArea1.append("\n");
                    }
                    else{
                        jTextArea1.append("O Agente não percepcionou objectos.");
                    }
                }
            }
        }
        else{
            jTextArea1.append("A lista de Agentes está vazia!");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTextArea1.setText("");
        if(!A.getListaAgentes().isEmpty()){
            for(Agente a:A.getListaAgentes()) //Percorre a lista de agentes
            {
                if(a.tipo==(selectedindex+1))  //Verifica se o agente é do tipo selecionado na jComboBox 
                {   
                    jTextArea1.append("O Robot com o id:"+a.id+" tem a seguinte memória:\n\n");
                    if(!a.memoria.isEmpty()){
                        for(Objecto b:a.memoria) //Imprime a memória
                        {
                            jTextArea1.append("Objecto "+b.id+"\n");
                            jTextArea1.append("Cor: "+b.cor+"\n");
                            jTextArea1.append("Forma: "+b.forma_geometrica+"\n");
                            jTextArea1.append("Posição: ("+b.posicao.getPos_x()+","+b.posicao.getPos_y()+")\n");
                            jTextArea1.append("Tipo: "+b.getTipo()+"\n\n");
                        } 
                        jTextArea1.append("\n");
                    }
                    else{
                        jTextArea1.append("O Agente não percepcionou objectos.");
                    }
                }
            }
        }
        else{
            jTextArea1.append("A lista de Agentes está vazia!");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        jTextArea1.setText("");
        if(!A.getListaAgentes().isEmpty()){
            for(Agente a:A.getListaAgentes()) //Percorre a lista de agentes
            {   
                if(a.tipo==(selectedindex+1))   //Verifica se o agente é do tipo selecionado na jComboBox
                {
                    //Imprime os dados estatísticos
                    jTextArea1.append("O Robot com o id: "+a.id+" tem os seguintes dados estatísticos:\n\n");
                    jTextArea1.append(String.format("Distância percorrida: %.2f\n",a.dist_percorrida));
                    jTextArea1.append("Número de objectos diferentes aprendidos: "+a.n_obj_dif+"\n");
                    jTextArea1.append("Número de objectos aprendidos: "+a.n_obj+"\n\n");                
                }
            }
        }
        else{
            jTextArea1.append("A lista de Agentes está vazia!");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        //Indice correspondente à escolha na jComboBox
        selectedindex=jComboBox1.getSelectedIndex();
    }//GEN-LAST:event_jComboBox1ActionPerformed
    
    /**
     * Main do programa - criação da Interface
     * @param args
     */
    public static void main(String[] args){
        new Interface().setVisible(true);            
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
